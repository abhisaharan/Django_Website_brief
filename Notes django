django - MySQL connectivity
-create a database in MySQL
-create a user. you can go with root user but its not a good idea
-change settings.py in django main project
-run python manage.py migrate files to check

views: simple python functions that take a request and respond in some kind of way
model: a blue print for your model database. Its a template of how you are
        going to store data.

Flow:

    main_website urls -> application(music) urls -> appln(music) views -> html


-makemigrations appname: whenever made changes to app models
-migrate: to commit migrations

********querying(adding data, deleting, modifying) in database**********
-go to python manage.py shell or console: from app_name import class1, class_u_choose
-class1.objects.all() : to list all the data objects inside it # added __str__(self) function
                        to display some text instead of "data object" for informational & aesthetic purpose.
-a = class1(colummn1 = "", column2 = ""....)
-a.save(): to save data in object
-a.column: to display details
-many methods for querying(class1.objects.filter(id = number))......learn further filter

///////////////////////////////////////////////////////////////////////////////////////////
**==**==**==the above process is implemented in views to connect to database. Some additional
************python functionality and html tags. Together the magic happens. look music/view.py def index().
def index(request):
    all_albums = Album.objects.all()
    html = ''
    for album in all_albums:
        url = '/music/' + str(album.id)+'/'
        html += '<a href="' + url + '">' + album.album_title + '</a><br>'
    return HttpResponse(html)
///////////////////////////////////////////////////////////////////////////////////////////


**********register new model class names in applications directory's admin file**********
->by this you can access these database tables through django admin



->context: common variable used that defines what passes to html
->{% python code %}: goes between these
->{{ variable }}: goes between these.



